<?php

include_once dirname(__FILE__) . '/include/form_elements.inc';

include_once dirname(__FILE__) . '/include/crf_case.conf.inc';

include_once dirname(__FILE__) . '/include/crf_dataset.inc';

/**
 * CRF Dataset Table Name
 */
define('CRF_DS_TABLE', 'crf_case_data');


/**
* Implementation of hook_menu
*/
function crf_case_menu()
{
  $items = array();
  $items['crf_case/%/%'] = array(
    'page callback' => 'crf_case',
    'page arguments' => array(1,2),
    'access callback' => 'crf_case_checkperm',
    'access arguments' => array(1),
    'type' => MENU_CALLBACK
  );
  $items['crf_case_edit'] = array(
    'page callback' => 'crf_case_edit',
    'access callback' => 'crf_case_checkperm',
    'type' => MENU_CALLBACK
  );
  return $items;  
}

function crf_case_checkperm() {
  global $user;
  if ((isset($user->roles[3]) || $user->uid == 1)) {
    return true;
  }
  else {
    return false;
  }
}

function crf_case($p_uid, $type) {
  global $user;
  $hospital_no = $user->profile_hospital_no;
  $query = "SELECT * FROM apply WHERE p_uid = %d AND hospital_no = '%s'";
  $result = db_query($query, $p_uid, $hospital_no);
  $p_arr = db_fetch_array($result);
//  print_r($p_arr);exit;
  if ($p_arr != NULL) {
    crf_common_session('p_arr', $p_arr);
    crf_common_session('p_uid', $p_uid);
    crf_common_session('type', $type); //1代表可编辑 2代表不可编辑
    drupal_goto('crf_case_edit');
  }
  else {
    drupal_set_message('非法操作，请从下列列表中选择一项进入录入!');
    drupal_goto('crf_case');
  }
}

/**
 * 参数eg:
 * crf_case_edit/zqtys
 * crf_case_edit/第几页
 */
function crf_case_edit() {
  drupal_set_breadcrumb(array(l('首页', ''), l('随机列表', 'crf_list'), '病历录入'));
  $no = arg(1);
  if (empty($no)) {
    $no = 'zhiqing_tys';
  }
  
  if (FALSE === get_form_elements_arr($no)) {
    drupal_set_message('未建立的数组元素,请联系管理员！');
    return drupal_not_found();
  }
  
  return drupal_get_form("crf_case_form", $no);
}

function crf_case_form(&$form_state, $arg = NULL) {
  $no = $arg;
  $form_elements_arr = get_form_elements_arr($no);
  
  $dataset = crf_ds_load($no);
  $dataset = json_to_array($dataset);
  
  foreach($form_elements_arr as $row => $group) {
    if (stristr($row, '#') === FALSE) {//skip #
      foreach($group as $element_no => $element) {
  //      print "e_{$no}_{$row}_{$element_no}";
        crf_set_element_default_value($element, $dataset, $row, $element_no);
        $form["e_{$no}_{$row}_{$element_no}"] = $element;
      }
    }
  }
  
  $form['#theme'] = 'crf_case_form_'. $no;
  $form['submit'] = array(
    '#type' => 'submit',
    '#value'=> '确定'
  );
  return $form;
}


function crf_case_form_submit($form, $form_state) {
  $no = arg(1);
  if (empty($no)) {
    $no = 'zhiqing_tys';
  }
  
  $values  = $form_state['values'];
  $dataset = crf_ds_parse($no, $values, $form);
  
  //var_dump($dataset);
  /**
   * $dataset
   *  array
       1 => array (
          1 => string '2012-06-05 00:00:00' (length=19)
          2 => string '2012-06-05 00:00:00' (length=19)
       )
  */
   
   $hook = "crf_ds_update_$no";
   if (is_callable($hook)) {
     $dataset = call_user_func_array($hook, array($no, $dataset));
   }
   
   crf_ds_save($dataset, $no);
   crf_progress_save($no);
   drupal_set_message('保存成功！');
}


function crf_set_element_default_value(&$element, $dataset, $row, $col) {
  if (isset($dataset[$row]) && isset($dataset[$row][$col])) {
    $element['#default_value'] = $dataset[$row][$col];
  }
} 


function crf_progress_save($name) {
 
  $p_uid = crf_common_session('p_uid');
  $row   = crf_progress_load();
  
  if (!$row) {
    db_query("INSERT INTO crf_case_user_profile (uid, data, updated) VALUES (%d, '%s', %d)",  $p_uid, json_encode(array($name)), time());
  }
  else {
    $keys = json_decode($row['data']);
    
    if (!in_array($name, $keys)) {
      $keys[] = $name;
      db_query("UPDATE crf_case_user_profile SET data = '%s', updated = %d WHERE uid = %d", json_encode($keys), time(), $p_uid);
    }
  }
}

function crf_progress_load($p_uid = NULL) {
  static $p;
  if (!$p_uid) {
    $p_uid = crf_common_session('p_uid');
  }
  
  if (!isset($p[$p_uid])) {
    $row = db_fetch_array(db_query('SELECT * FROM crf_case_user_profile WHERE uid = %d', $p_uid));
    $p[$p_uid] = $row;
  }
  
  return $p[$p_uid];
}

/**
 * Implementation of hook_theme().
 */
function crf_case_theme() {
  return array(
    'crf_case_form_zhiqing_tys' => array(
      'arguments' => array('form' => NULL, 'class' => 'zhiqing-tys', 'table' => 'zhiqing_tys', 'table_name' => '知情同意书'),
      'template' => 'templates/zhiqing-tys',
    ),
    'crf_case_form_ruxuan_bz' => array(
      'arguments' => array('form' => NULL, 'class' => 'ruxuan-bz', 'table' => 'ruxuan_bz', 'table_name' => '入选标准'),
      'template' => 'templates/ruxuan-bz',
    ),
    'crf_case_form_paichu_bz' => array(
      'arguments' => array('form' => NULL, 'class' => 'paichu-bz', 'table' => 'paichu_bz', 'table_name' => '排除标准'),
      'template' => 'templates/paichu-bz',
    ),
    'crf_case_form_renkou_tjx' => array(
      'arguments' => array('form' => NULL, 'class' => 'renkou-tjx', 'table' => 'renkou_tjx', 'table_name' => '人口统计学'),
      'template' => 'templates/renkou-tjx',
    ),
    'crf_case_form_weiai_ssyzdqk' => array(
      'arguments' => array('form' => NULL, 'class' => 'weiai-ssyzdqk', 'table' => 'weiai_ssyzdqk', 'table_name' => '胃癌手术与诊断情况'),
      'template' => 'templates/weiai-ssyzdqk',
    ),
    'crf_case_form_jiwang_hxhjb' => array(
      'arguments' => array('form' => NULL, 'class' => 'jiwang-hxhjb', 'table' => 'jiwang_hxhjb', 'table_name' => '既往或现患疾病'),
      'template' => 'templates/jiwang-hxhjb',
    ),
    'crf_case_form_huaiyun_knx' => array(
      'arguments' => array('form' => NULL, 'class' => 'huaiyun-knx', 'table' => 'huaiyun_knx', 'table_name' => '怀孕可能性'),
      'template' => 'templates/huaiyun-knx',
    ),
    'crf_case_form_teshu_jc' => array(
      'arguments' => array('form' => NULL, 'class' => 'teshu-jc', 'table' => 'teshu_jc', 'table_name' => '特殊检查'),
      'template' => 'templates/teshu-jc',
    ),
    'crf_case_form_xindian_tjc' => array(
      'arguments' => array('form' => NULL, 'class' => 'xindian-tjc', 'table' => 'xindian_tjc', 'table_name' => '心电图检查'),
      'template' => 'templates/xindian-tjc',
    ),      
    'crf_case_form_quanshen_tgjc' => array(
      'arguments' => array('form' => NULL, 'class' => 'quanshen-tgjc', 'table' => 'quanshen_tgjc', 'table_name' => '全身体格检查'),
      'template' => 'templates/quanshen-tgjc',
    ),   
    'crf_case_form_xueqing_zlbzwjc' => array(
      'arguments' => array('form' => NULL, 'class' => 'xueqing-zlbzwjc', 'table' => 'xueqing_zlbzwjc', 'table_name' => '血清肿瘤标志物检测'),
      'template' => 'templates/xueqing-zlbzwjc',
    ),   
    'crf_case_form_shiyan_sjc' => array(
      'arguments' => array('form' => NULL, 'class' => 'shiyan-sjc', 'table' => 'shiyan_sjc', 'table_name' => '实验室检查'),
      'template' => 'templates/shiyan-sjc',
    ),
  );
}

function json_to_array($data){
  $arr=array();
  if (empty ($data)) {
    return $arr;
  }
  
  if (is_object($data)) {
    $data = (array)$data;
  }
  
  foreach($data as $k=>$w){
    if(is_object($w)) {
      $arr[$k]=json_to_array($w); //判断类型是不是object
    }
    else {
      $arr[$k]=$w;
    }
  }
  
  return $arr;
}

function crf_case_init() {
  if (arg(0) == 'crf_case_edit') {
    $row = crf_progress_load();
    if ($row) {
      $progress = json_decode($row['data']);
    }
    else {
      $progress = array();
    }
    drupal_add_js(array('progress' => $progress), 'setting');
  }
  
  $path = drupal_get_path('module', 'crf_case');
  drupal_add_js($path . '/js/crf_common.js', 'module');
}